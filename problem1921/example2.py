# ход Пети, результат отвечает на вопрос, удовлетворяется ли
# требование задачи,
# l - кол-во камней в первой куче, r - во второй, step - номер хода
def player1(l, r, step):
    # если это первый ход Пети, тогда Ваня пока что
    # не сделал ни одного хода
    if step == 1:
        # выигрышная стратегия подразумевает, что
        # при любом поведении Вани требование  задачи должно быть удовлетворено,
        # если говорится, что тсратегия есть, значит,
        # нам подойдёт, если условие задачи выполнится в случае
        # хотя бы одного хода, поэтому используем ИЛИ
        return player2(l + 1, r, step) or player2(l, r + 1, step) or \
               player2(l * 2, r, step) or player2(l, r * 2, step)
    # если это второй ход Пети, т.е. Ваня сделал уже один ход
    else:
        # если Ваня при этом победил,
        if l + r >= 77:
            # требование задачи не выполнено
            return False

        # каким-то своим ходом Петя может выиграть,
        # то условие задачи будет выполнено, поэтому ИЛИ
        return player2(l + 1, r, step) or player2(l, r + 1, step) or \
               player2(l * 2, r, step) or player2(l, r * 2, step)


# ход Вани, результат отвечает на вопрос, удовлетворяется ли
# требование задачи,
# l - кол-во камней в первой куче, r - во второй,  step - номер хода
def player2(l, r, step):
    # обработка состояния игры после хода Пети
    # если Петя сделал первый ход
    if step == 1:
        # если он при этом победил,
        if l + r >= 77:
            # требование задачи не выполнено
            return False

        # разные ходы Вани
        # нам нужно, чтобы при любом ходе Вани Петя победил, т.е.
        # требование задачи было выполнено, поэтому используем И
        return player1(l + 1, r, step + 1) and player1(l, r + 1, step + 1) \
               and player1(l * 2, r, step + 1) and player1(l, r * 2, step + 1)
    # если Петя сделал второй ход
    else:
        # он должен победить
        return l + r >= 77


# перебираем кол-во камней во второй куче
for s in range(1, 69 + 1):
    # запускаем обработку первого шага Пети, если
    # нас устраивает результат,
    if player1(7, s, 1):
        # выводим кол-во камней во второй куче
        print(s)
