# получить массив цифр числа
def getDigits(n):
    # номер читаемого разряда
    r = 0
    # создаём список цифр
    d = list()
    # пока есть хотя бы одна цифра в числе
    while n > 0:
        d.append(n % 10)
        # увеличиваем номер текущего разряда
        r = r + 1
        # отбрасываем младший разряд числа
        n = n // 10
    return d


# перебираем все числа, которые в шетнадцатеричной
# системе будут представлены двумя цифрами
# первое число - это 10, последнее - FF
for n1 in range(16, 256):
    d1 = getDigits(n1)
    if d1[0] > 6 or d1[1] > 6:
        continue
    for n2 in range(16, 256):
        d2 = getDigits(n2)
        if d2[0] > 6 or d2[1] > 6:
            continue

        #  рассчитываем поразрядные суммы
        s1 = d1[0] + d2[0]
        s2 = d1[1] + d2[1]

        # формируем число так, чтобы суммы шли в порядке невозрастания
        # т.к. обе цифры не больше шести, то их сумма точно займёт всего один разряд
        # в шестнадцатеричном представлении
        if s1 > s2:
            res = s2 * 16 + s1
        else:
            res = s1 * 16 + s2
        # переводим результат в шестнадцатеричную строку
        answ = hex(res)
        # если результат равен одному из заданных, выведем его
        if answ == "0x9f" or answ == "0x911" or answ == "0x42" or answ == "0x7a":
            # перехожим на новую строку
            print(answ)
