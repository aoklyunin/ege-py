# открываем файл, относительный путь строится от папки со скриптом
# можно вместо этого закинуть файл куда-нибудь на диск и указать полный путь
with open('26.txt') as f:
    # читаем строку файла
    line = f.readline()
    # получаем элементы
    elems = line.split(' ')
    # объём хранилища - первый элемент
    s = int(elems[0])
    # кол-во файлов - второй
    n = int(elems[1])

    # создаём массив размеров файла
    arr = []
    # читаем размеры
    for i in range(n):
        arr.append(int(f.readline()))

    # сортируем размеры по возрастанию
    arr.sort()

    # сумма файлов
    sum = 0
    # индекс файла максимального размера
    posMax = 0

    # перебираем упорядоченные размеры файлов
    for i in range(n):
        # если добавление
        if sum + arr[i] <= s:
            # прибавляем к сумме
            sum += arr[i]
            # т.к. мы перебираем размеры файлов в порядке возрастания,
            # то в переменной posMax индекс файла, наибольшего размера
            posMax = i
        else:
            break

    # сохраняем максимальную сумму
    max = sum
    # максимальный размер сохраняемого файла
    maxSize = arr[posMax]

    # перебираем все возможные пары элементов массива
    # первый элемент - один из индексов файлов, взятых для сохранения
    # их индексы находятся в диапазоне [0, posMax]
    for i in range(0, posMax + 1):
        # второй элемент - один из индексов файлов, не взятых для сохранения
        # их индексы находятся в диапазоне [posMax+1, n)
        for j in range(posMax + 1, n):
            # находим сумму, которая бы получилась, если бы мы не сохранили файл, перебираемый
            # первым циклом и сохранили файл, перебираемый вторым
            nSum = sum - arr[i] + arr[j]
            # если новая сумма не превышает заданный размер и
            # при этом больше найденной
            if nSum <= s and nSum >= max:
                # сохраняем её в качестве найденной
                max = nSum
                # если новый файл по размеру больше максимального из сохранённых
                # нужно сравнивать именно с размером сохранённого
                # файла максимального размера, полученного на предыдущем этапе
                # ведь каждая проверка на замену файла происходит независимо
                if arr[j] > arr[posMax]:
                    # сохраняем размер
                    maxSize = arr[j]

    # выводим сумму и размер
    print(sum, maxSize)
